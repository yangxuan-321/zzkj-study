
app {
  timezone = "Asia/Shanghai"
}


http {
  main {
    host = "0.0.0.0"
    port = 8001
  }
}

database {
  main {
    dataSourceClass = org.postgresql.ds.PGSimpleDataSource
    properties = {
      serverName = "127.0.0.1"
      portNumber = 5432
      databaseName = "scala-crud"
      user = "postgres"
      password = "123456"
    }
    poolName = "simple_rw"
    connectionTimeout = 500
    maximumPoolSize = 8
    numThreads = 8
  }
}

auth {
  stateless {
    jwt {
      secret = "26uKTlqR8BKpjdJ35DmuN+1q5cA28ep2xKLjR9n2QhI="
      tsec {
        header-name = "X-TSec-JWT"
        expiry-duration = 30.days
        max-idle = 1.days
      }
    }
  }
}

cassandra {
  tables {
    core-table-name = core
    event-table-name = event
    beacon-table-name = bc
  }
  common {
    keyspace = ybc
    preparedStatementCacheSize = 1000
    session {
      contactPoints=["adx66", "adx67", "adx68"]
      withPort = 9042
      withoutMetrics = true
      withoutJMXReporting = false
      maxSchemaAgreementWaitSeconds = 1
      addressTranslator = com.datastax.driver.core.policies.IdentityTranslator
    }
  }
  main.write = ${cassandra.common}
  main.write.session.queryOptions.consistencyLevel = QUORUM // QUORUM // ANY // LOCAL_QUORUM //ONE //LOCAL_QUORUM
  main.read = ${cassandra.common}
  main.read.session.queryOptions.consistencyLevel = QUORUM // QUORUM // ANY // LOCAL_QUORUM //ONE //LOCAL_QUORUM
}

reporting.logs {
  // 主核心数据流
  core-1 {
    pulsar.enabled = false
    kafka {
      enabled = true
      topic-name = "y1"
    }
  }
}

pulsar {
  broker = "pulsar://adx61:6650,adx62:6650,adx63:6650"
  producer {
    name = "producer1"
    persistent = on
    tenant = "ady"
    namespace = "dev"
    topic = "c11"
  }
  consumer = ${pulsar.producer}
  consumer {
    name = "consumer1"
    subscription = "s3"
    subscription-type = "Shared"
  }
}

pub.app.placement {
  banner = "10004"
  interstitial = "10001"
  splashScreen = "10002"
  native = "10003"
}